#!/bin/bash

echo " Iniciando setup do projeto Barbearia..."

# Verificar se Docker est치 instalado
if ! command -v docker &> /dev/null; then
    echo " Docker n칚o est치 instalado. Por favor, instale o Docker primeiro."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "Docker Compose n칚o est치 instalado. Por favor, instale o Docker Compose primeiro."
    exit 1
fi

# Copiar arquivo de ambiente se n칚o existir
if [ ! -f .env ]; then
    echo " Criando arquivo .env a partir de .env.example..."
    cp .env.example .env
    echo "  Por favor, edite o arquivo .env com suas configura칞칫es antes de continuar."
    exit 1
fi

# Verificar se as vari치veis de ambiente est칚o definidas
if ! grep -q "JWT_SECRET" .env || [ -z "$(grep "JWT_SECRET" .env | cut -d '=' -f2)" ]; then
    echo " JWT_SECRET n칚o est치 definido no arquivo .env"
    exit 1
fi

# Parar containers existentes
echo " Parando containers existentes..."
docker-compose down

# Build e execu칞칚o com Docker
echo " Construindo e iniciando containers..."
docker-compose up --build -d

echo " Aguardando servi칞os inicializarem..."
sleep 15

# Verificar se os servi칞os est칚o saud치veis
echo "游댌 Verificando status dos servi칞os..."
for i in {1..30}; do
    if docker-compose ps | grep -q "Up" && curl -s http://localhost:8080/actuator/health > /dev/null; then
        echo " Aplica칞칚o Spring Boot est치 respondendo!"
        break
    elif [ $i -eq 30 ]; then
        echo " Timeout aguardando aplica칞칚o ficar dispon칤vel"
        docker-compose logs app
        exit 1
    else
        echo " Aguardando aplica칞칚o... ($i/30)"
        sleep 5
    fi
done

echo "游늵 Status final dos containers:"
docker-compose ps

echo ""
echo " Setup conclu칤do com sucesso!"
echo " API dispon칤vel em: http://localhost:8080"
echo " MySQL dispon칤vel em: localhost:3307"
echo "  Redis dispon칤vel em: localhost:6380"
echo ""
echo " Para ver os logs: docker-compose logs -f"
echo " Para parar: docker-compose down"
echo ""